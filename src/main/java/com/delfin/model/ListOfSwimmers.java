package delfin.model;

//import java.lang.classfile.instruction.NewMultiArrayInstruction;
import java.time.Duration;
import java.time.LocalDate;
import java.util.*;
import java.util.EnumSet;



public class ListOfSwimmers {

    private ArrayList<Swimmer> listOfSwimmers;


    public ListOfSwimmers(){
        this.listOfSwimmers = new ArrayList<>();
        dummieList();
    }

    public void addSwimmer(Swimmer swimmer){
        listOfSwimmers.add(swimmer);
    }

    public List<Swimmer> getSwimmersIsPaidFalseList() {

        List<Swimmer> listSwimmersIsPaidFalse = new ArrayList<>();

        for (Swimmer swimmer : listOfSwimmers) {
            if (!swimmer.getIsPaid()) {
                listSwimmersIsPaidFalse.add(swimmer);
            }
        }

        return listSwimmersIsPaidFalse;

    }

    public List<Swimmer> getListOfAllSwimmers() {

        List<Swimmer> listOfAllSwimmers = new ArrayList<>();

        for (Swimmer swimmer : listOfSwimmers) {
            listOfAllSwimmers.add(swimmer);
        }
        return listOfAllSwimmers;
    }

    public List<Swimmer> getCompSwimmersList() {
        List<Swimmer> compSwimmersList = new ArrayList<>();

        for (Swimmer swimmer : listOfSwimmers) {
            if (swimmer instanceof CompSwimmer) {
                compSwimmersList.add(swimmer);
            }
        }
        return compSwimmersList;
    }

    public List<CompSwimmer> getActiveCompSwimmersList() {
        List<CompSwimmer> activeCompSwimmersList = new ArrayList<>();

        for (Swimmer swimmer : listOfSwimmers) {
            if (swimmer instanceof CompSwimmer && swimmer.getIsActive()) {
                activeCompSwimmersList.add((CompSwimmer) swimmer);
            }
        }
        return activeCompSwimmersList;
    }



    public String toString() {
        StringBuilder sb = new StringBuilder("Listen af svømmere:\n");
        int id = 1;
        for (Swimmer swimmer : listOfSwimmers) {
            sb.append("ID " + id + ": " + swimmer).append("\n");
            id++;
        }
        return sb.toString();
    }

    public Swimmer getSwimmerByIndex(int index) {
        return listOfSwimmers.get(index);
    }

    public void dummieList() {
//
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Peter", "Petersen", LocalDate.of(1985, 5, 9), true, true));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Anders", "Andersen", LocalDate.of(2001, 12, 12), false, true, new ArrayList<delfin.model.Training>(Arrays.asList(new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 12, 17), Duration.parse("PT, 1M, 1S")),
//                new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 10, 17), Duration.parse("PT, 1M, 5S"))))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Niels", "Nielsen", LocalDate.of(1975, 1, 22), false, false));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Jakob", "Jakobsen", LocalDate.of(2000, 3, 9), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 9), Duration.parse("PT, 1M, 15S"))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Søren", "Sørensen", LocalDate.of(2012, 10, 17), false, true));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Peder", "Pedersen", LocalDate.of(2017, 7, 29), true, true));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Anna", "Mogensen", LocalDate.of(1999, 2, 19), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 12), Duration.parse("PT, 1M, 3S"))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Karoline", "Ingemann", LocalDate.of(2000, 7, 7), false, true));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Matilde", "Jensen", LocalDate.of(2000, 4, 16), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 5, 9), Duration.parse("PT, 1M, 7S"))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Thomas", "Anker", LocalDate.of(2020, 5, 12), true, false));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Jenny", "Andersen", LocalDate.of(1989, 8, 3), false, true));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Betina", "Hoffmann", LocalDate.of(1992, 3, 19), false, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2015, 1, 19), Duration.parse("PT, 0M, 57S"))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Lisbet", "Søndergaard", LocalDate.of(1972, 4, 5), true, true));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Cirkeline", "Sommerfelt", LocalDate.of(2011, 6, 1), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 3, 19), Duration.parse("PT, 1M, 16S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Mikkel", "Østergaard", LocalDate.of(1998, 11, 15), false, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 11, 15), Duration.parse("PT, 1M, 2S"))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Alexander", "Aabech", LocalDate.of(1994, 12, 4), false, true));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Magnus", "Jørgensen", LocalDate.of(1998, 9, 10), true, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 5, 17), Duration.parse("PT, 0M, 56S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Moskinen", "Morty", LocalDate.of(2015, 7, 11), true, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 3, 22), Duration.parse("PT, 0M, 56S"))));
//        listOfSwimmers.add(new delfin.model.NonCompSwimmer("Jonah", "Baby", LocalDate.of(2017, 10, 16), false, false));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Doofus", "Winther", LocalDate.of(2016, 12, 22), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 9, 14), Duration.parse("PT, 0M, 59S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Oskinen", "Olle", LocalDate.of(2016, 12, 23), false, true,  new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 5, 12), Duration.parse("PT, 1M, 13S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Solvej", "Weber", LocalDate.of(2004, 5, 18), true, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 2, 12), Duration.parse("PT, 1M, 22S"))));
//
//        //Breast senior
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Caroline", "Pedersen", LocalDate.of(1999, 3, 29), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 6, 23), Duration.parse("PT, 1M, 4S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Anker", "Jensen", LocalDate.of(1997, 7, 3), false, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 2), Duration.parse("PT, 0M, 58S"))));
//
//        //Breast junir
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Lars", "Larsen", LocalDate.of(2014, 9, 15), true, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 15), Duration.parse("PT, 1M ,13S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Thomas", "Anker", LocalDate.of(2013, 10, 30), false, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 24), Duration.parse("PT, 1M, 9S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Inger", "Jensen", LocalDate.of(2018, 9, 23), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 3, 18), Duration.parse("PT, 1M, 23S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Maria", "Sørensen", LocalDate.of(2016, 12, 4), true, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 12, 19), Duration.parse("PT, 1M, 19S"))));
//
//        //Free sen
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Gertrud", "Madsen", LocalDate.of(1987, 6, 18), false, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 3, 12), Duration.parse("PT, 1M, 12S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Amanda", "Nygaard", LocalDate.of(2002, 7, 1), true, true, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 11, 28), Duration.parse("PT, 0M, 59S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Mads", "Mikkelsen", LocalDate.of(1995, 8, 12), true, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 6, 1), Duration.parse("PT, 0M, 56S"))));
//
//        //Free jun
//        listOfSwimmers.add(new delfin.model.CompSwimmer("Niklas", "Eilsøe", LocalDate.of(2016, 3, 8), false, false, new delfin.model.Training(delfin.model.SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 2, 22), Duration.parse("PT, 1M, 3S"))));
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//
//        //Back sen
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//
//        //back jun
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//
//        //Butt sen
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//
//        //Butt jun
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());
//        listOfSwimmers.add(new delfin.model.CompSwimmer());


        //Generated from prompts to ChatGpt

        //non comp junior swimmers

        listOfSwimmers.add(new NonCompSwimmer("Lone", "Nielsen", LocalDate.of(2015, 11, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Hansen", LocalDate.of(2010, 2, 5), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Camilla", "Nielsen", LocalDate.of(2015, 1, 17), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Madsen", LocalDate.of(2013, 1, 11), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Christensen", LocalDate.of(2012, 7, 18), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Christensen", LocalDate.of(2015, 1, 21), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Andersen", LocalDate.of(2014, 5, 6), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Jensen", LocalDate.of(2011, 10, 6), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Olsen", LocalDate.of(2010, 3, 15), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Christensen", LocalDate.of(2009, 8, 1), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Larsen", LocalDate.of(2009, 1, 1), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Hans", "Larsen", LocalDate.of(2012, 11, 25), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Jensen", LocalDate.of(2010, 6, 18), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Madsen", LocalDate.of(2011, 7, 4), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Thomsen", LocalDate.of(2011, 5, 11), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Olsen", LocalDate.of(2014, 12, 23), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Niels", "Jensen", LocalDate.of(2012, 7, 14), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Maria", "Madsen", LocalDate.of(2011, 1, 4), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Thomsen", LocalDate.of(2014, 10, 17), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Jensen", LocalDate.of(2014, 1, 11), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Madsen", LocalDate.of(2014, 12, 22), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Thomsen", LocalDate.of(2011, 9, 20), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Thomsen", LocalDate.of(2012, 4, 15), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Larsen", LocalDate.of(2015, 5, 25), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Nielsen", LocalDate.of(2010, 6, 20), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Andersen", LocalDate.of(2010, 10, 1), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Andersen", LocalDate.of(2014, 2, 8), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Olsen", LocalDate.of(2009, 3, 1), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Andersen", LocalDate.of(2015, 8, 15), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Niels", "Nielsen", LocalDate.of(2009, 12, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Christensen", LocalDate.of(2010, 7, 26), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Madsen", LocalDate.of(2014, 12, 16), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Hansen", LocalDate.of(2009, 8, 15), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Jensen", LocalDate.of(2009, 12, 13), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Madsen", LocalDate.of(2012, 8, 21), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Nielsen", LocalDate.of(2011, 11, 4), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Nielsen", LocalDate.of(2014, 11, 14), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Pedersen", LocalDate.of(2010, 8, 7), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Christensen", LocalDate.of(2010, 2, 2), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Christensen", LocalDate.of(2012, 4, 23), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Hansen", LocalDate.of(2013, 7, 8), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Olsen", LocalDate.of(2015, 2, 2), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Hans", "Nielsen", LocalDate.of(2014, 4, 22), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Madsen", LocalDate.of(2013, 11, 20), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Maria", "Thomsen", LocalDate.of(2014, 9, 4), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Madsen", LocalDate.of(2015, 1, 9), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Camilla", "Pedersen", LocalDate.of(2013, 12, 2), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Karen", "Andersen", LocalDate.of(2015, 8, 12), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Hansen", LocalDate.of(2010, 12, 22), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Pedersen", LocalDate.of(2013, 11, 12), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Jensen", LocalDate.of(2009, 6, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Pedersen", LocalDate.of(2013, 4, 18), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Hans", "Andersen", LocalDate.of(2015, 8, 26), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Maria", "Andersen", LocalDate.of(2009, 2, 18), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Hansen", LocalDate.of(2012, 8, 11), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Thomsen", LocalDate.of(2011, 1, 27), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Karen", "Christensen", LocalDate.of(2010, 2, 19), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Christensen", LocalDate.of(2012, 5, 5), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Andersen", LocalDate.of(2012, 1, 23), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Olsen", LocalDate.of(2010, 1, 6), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Pedersen", LocalDate.of(2011, 2, 2), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Nielsen", LocalDate.of(2011, 9, 9), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Madsen", LocalDate.of(2009, 9, 23), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Anne", "Larsen", LocalDate.of(2014, 4, 4), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Pedersen", LocalDate.of(2014, 3, 4), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Christensen", LocalDate.of(2009, 4, 3), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Niels", "Jensen", LocalDate.of(2012, 11, 1), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Larsen", LocalDate.of(2015, 8, 4), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Larsen", LocalDate.of(2014, 3, 14), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Andersen", LocalDate.of(2015, 10, 15), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Andersen", LocalDate.of(2010, 12, 11), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Thomsen", LocalDate.of(2014, 5, 18), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Larsen", LocalDate.of(2012, 2, 4), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Olsen", LocalDate.of(2012, 3, 15), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Thomsen", LocalDate.of(2009, 2, 18), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Thomsen", LocalDate.of(2011, 9, 18), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Anne", "Larsen", LocalDate.of(2013, 11, 7), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Thomsen", LocalDate.of(2012, 1, 16), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Andersen", LocalDate.of(2015, 3, 25), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Anne", "Madsen", LocalDate.of(2013, 5, 7), false, true));


        //non comp senior swimmers

        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Pedersen", LocalDate.of(1980, 12, 26), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Pedersen", LocalDate.of(1977, 12, 20), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Larsen", LocalDate.of(2000, 12, 4), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Olsen", LocalDate.of(1990, 1, 13), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Olsen", LocalDate.of(1993, 10, 20), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Niels", "Larsen", LocalDate.of(2004, 1, 8), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Nielsen", LocalDate.of(1995, 6, 18), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Olsen", LocalDate.of(1969, 1, 18), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Anne", "Christensen", LocalDate.of(1967, 3, 20), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Olsen", LocalDate.of(1966, 10, 18), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Larsen", LocalDate.of(1990, 1, 23), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Olsen", LocalDate.of(1983, 8, 1), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Nielsen", LocalDate.of(1977, 9, 23), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Pedersen", LocalDate.of(1966, 11, 22), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Olsen", LocalDate.of(1994, 6, 22), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Pedersen", LocalDate.of(2005, 7, 23), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Andersen", LocalDate.of(2002, 9, 23), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Jensen", LocalDate.of(1974, 1, 7), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Hansen", LocalDate.of(1972, 10, 27), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Andersen", LocalDate.of(2003, 11, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Andersen", LocalDate.of(1963, 6, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Thomsen", LocalDate.of(2005, 8, 6), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Hansen", LocalDate.of(1989, 7, 13), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Christensen", LocalDate.of(1963, 8, 3), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Andersen", LocalDate.of(1988, 9, 8), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Thomsen", LocalDate.of(1972, 6, 4), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Olsen", LocalDate.of(1988, 4, 11), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Larsen", LocalDate.of(1969, 5, 6), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Andersen", LocalDate.of(1987, 2, 25), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Karen", "Christensen", LocalDate.of(1967, 10, 27), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Thomsen", LocalDate.of(1975, 3, 5), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Jensen", LocalDate.of(1977, 6, 9), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Jensen", LocalDate.of(1985, 4, 28), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Larsen", LocalDate.of(2000, 6, 26), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Larsen", LocalDate.of(1994, 6, 8), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Madsen", LocalDate.of(2001, 5, 20), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Hansen", LocalDate.of(1994, 1, 23), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Olsen", LocalDate.of(1963, 6, 17), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Thomsen", LocalDate.of(2001, 12, 21), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Niels", "Olsen", LocalDate.of(1985, 11, 1), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Maria", "Olsen", LocalDate.of(1976, 1, 4), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Niels", "Andersen", LocalDate.of(1961, 4, 4), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Mette", "Madsen", LocalDate.of(1997, 11, 25), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Olsen", LocalDate.of(1966, 10, 7), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Larsen", LocalDate.of(1996, 2, 9), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Lars", "Nielsen", LocalDate.of(1973, 9, 28), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Karen", "Nielsen", LocalDate.of(1991, 5, 12), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Thomsen", LocalDate.of(1961, 7, 4), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Madsen", LocalDate.of(1977, 12, 18), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Christensen", LocalDate.of(1972, 5, 7), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Anders", "Hansen", LocalDate.of(1970, 2, 26), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Hans", "Hansen", LocalDate.of(1996, 3, 27), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Madsen", LocalDate.of(1976, 5, 9), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Ida", "Christensen", LocalDate.of(1976, 11, 1), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jens", "Andersen", LocalDate.of(1975, 5, 16), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Andersen", LocalDate.of(1974, 12, 10), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Anne", "Andersen", LocalDate.of(2004, 12, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Rasmus", "Nielsen", LocalDate.of(1962, 12, 28), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Nielsen", LocalDate.of(1964, 11, 21), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Christensen", LocalDate.of(1974, 4, 21), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Madsen", LocalDate.of(1966, 10, 5), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Andersen", LocalDate.of(1967, 2, 9), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Erik", "Madsen", LocalDate.of(1993, 1, 5), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Pedersen", LocalDate.of(1961, 7, 24), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Bo", "Hansen", LocalDate.of(1990, 7, 21), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Andersen", LocalDate.of(1993, 7, 18), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Andersen", LocalDate.of(1973, 2, 12), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Madsen", LocalDate.of(1970, 10, 17), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Karen", "Pedersen", LocalDate.of(1987, 2, 14), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Pedersen", LocalDate.of(1969, 7, 28), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Pedersen", LocalDate.of(1986, 8, 2), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Pedersen", LocalDate.of(1971, 1, 22), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Kirsten", "Hansen", LocalDate.of(1969, 7, 28), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Lone", "Andersen", LocalDate.of(1967, 7, 16), false, true));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Thomsen", LocalDate.of(2000, 11, 26), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Thomas", "Madsen", LocalDate.of(1973, 4, 11), true, false));
        listOfSwimmers.add(new NonCompSwimmer("Anne", "Andersen", LocalDate.of(1979, 3, 22), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Sofie", "Thomsen", LocalDate.of(1989, 10, 2), false, false));
        listOfSwimmers.add(new NonCompSwimmer("Pernille", "Thomsen", LocalDate.of(1973, 5, 16), true, true));
        listOfSwimmers.add(new NonCompSwimmer("Jesper", "Thomsen", LocalDate.of(1994, 7, 6), true, true));


        //delfin.model.Training junior competition swimmers
//      training_swimmers_after_2008

        listOfSwimmers.add(new CompSwimmer("Hans", "Christensen", LocalDate.of(2015, 7, 28), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 8, 28), Duration.parse("PT2M47S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 1, 12), Duration.parse("PT4M20S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Jensen", LocalDate.of(2012, 10, 1), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 4, 18), Duration.parse("PT2M36S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 9, 28), Duration.parse("PT1M50S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Madsen", LocalDate.of(2013, 5, 4), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 9, 2), Duration.parse("PT4M31S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 7), Duration.parse("PT4M44S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Pedersen", LocalDate.of(2010, 6, 4), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 1, 10), Duration.parse("PT2M40S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 8), Duration.parse("PT1M10S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Larsen", LocalDate.of(2015, 12, 6), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 6), Duration.parse("PT2M29S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 8, 14), Duration.parse("PT1M52S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Larsen", LocalDate.of(2012, 4, 16), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 2, 16), Duration.parse("PT4M38S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 4, 7), Duration.parse("PT4M56S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Nielsen", LocalDate.of(2009, 5, 6), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 6), Duration.parse("PT4M59S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 5, 1), Duration.parse("PT1M27S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Larsen", LocalDate.of(2013, 6, 12), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 1, 20), Duration.parse("PT2M1S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 2, 23), Duration.parse("PT2M54S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Thomsen", LocalDate.of(2014, 3, 1), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 4, 9), Duration.parse("PT3M23S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 4, 2), Duration.parse("PT4M17S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Thomsen", LocalDate.of(2014, 11, 21), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 10, 22), Duration.parse("PT4M51S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 4, 4), Duration.parse("PT4M2S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Madsen", LocalDate.of(2015, 6, 19), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 8, 7), Duration.parse("PT4M53S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 5, 23), Duration.parse("PT2M32S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Hansen", LocalDate.of(2011, 7, 26), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 4, 5), Duration.parse("PT4M59S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 5, 18), Duration.parse("PT3M14S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Pedersen", LocalDate.of(2011, 3, 11), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 11, 26), Duration.parse("PT1M47S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 6), Duration.parse("PT2M36S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Christensen", LocalDate.of(2013, 9, 18), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 5, 8), Duration.parse("PT3M53S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 19), Duration.parse("PT2M36S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Thomsen", LocalDate.of(2013, 2, 18), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 1, 16), Duration.parse("PT1M55S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 1, 14), Duration.parse("PT3M9S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Hansen", LocalDate.of(2010, 7, 8), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 4, 23), Duration.parse("PT2M6S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 10, 23), Duration.parse("PT1M2S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Larsen", LocalDate.of(2011, 12, 6), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 12, 16), Duration.parse("PT4M24S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 2, 14), Duration.parse("PT2M42S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Andersen", LocalDate.of(2010, 4, 10), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 19), Duration.parse("PT4M43S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 11, 6), Duration.parse("PT4M25S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Jensen", LocalDate.of(2009, 3, 10), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 7, 12), Duration.parse("PT3M7S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 9, 7), Duration.parse("PT1M26S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Christensen", LocalDate.of(2009, 3, 4), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 1, 3), Duration.parse("PT3M21S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 2, 27), Duration.parse("PT4M14S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Nielsen", LocalDate.of(2010, 7, 17), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 12, 25), Duration.parse("PT3M45S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 14), Duration.parse("PT3M38S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Larsen", LocalDate.of(2013, 2, 22), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 27), Duration.parse("PT1M11S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 4, 7), Duration.parse("PT2M35S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Thomsen", LocalDate.of(2014, 8, 17), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 5, 23), Duration.parse("PT2M16S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 12, 12), Duration.parse("PT1M31S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Olsen", LocalDate.of(2015, 9, 14), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 2, 26), Duration.parse("PT1M11S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 12, 7), Duration.parse("PT1M23S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Hansen", LocalDate.of(2011, 6, 5), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 8), Duration.parse("PT1M51S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 7, 1), Duration.parse("PT2M11S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Pedersen", LocalDate.of(2015, 5, 5), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 6, 5), Duration.parse("PT2M30S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 1, 10), Duration.parse("PT4M9S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Madsen", LocalDate.of(2015, 3, 26), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 5, 19), Duration.parse("PT1M38S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 3, 12), Duration.parse("PT1M26S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Hansen", LocalDate.of(2013, 9, 28), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 7, 9), Duration.parse("PT2M7S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 11, 17), Duration.parse("PT3M54S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Nielsen", LocalDate.of(2014, 12, 7), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 3, 28), Duration.parse("PT3M19S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 8, 9), Duration.parse("PT2M8S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Nielsen", LocalDate.of(2009, 7, 24), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 7, 13), Duration.parse("PT2M42S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 10, 13), Duration.parse("PT4M31S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Hansen", LocalDate.of(2013, 8, 23), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 9), Duration.parse("PT3M1S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 2, 24), Duration.parse("PT3M21S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Andersen", LocalDate.of(2010, 7, 7), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 11, 22), Duration.parse("PT4M58S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 1, 18), Duration.parse("PT2M49S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Nielsen", LocalDate.of(2014, 3, 23), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 8), Duration.parse("PT3M9S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 2, 24), Duration.parse("PT2M31S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Olsen", LocalDate.of(2010, 3, 19), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 7, 23), Duration.parse("PT1M51S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 1, 28), Duration.parse("PT1M49S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Thomsen", LocalDate.of(2010, 7, 2), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 21), Duration.parse("PT1M44S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 3, 27), Duration.parse("PT3M54S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Pedersen", LocalDate.of(2015, 6, 26), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 8, 14), Duration.parse("PT1M2S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 8, 22), Duration.parse("PT3M43S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Olsen", LocalDate.of(2014, 4, 12), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 5, 15), Duration.parse("PT2M29S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 5, 3), Duration.parse("PT4M9S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Nielsen", LocalDate.of(2013, 10, 15), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 4, 4), Duration.parse("PT4M56S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 3, 4), Duration.parse("PT2M7S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Hansen", LocalDate.of(2014, 5, 19), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 8, 12), Duration.parse("PT2M4S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 3, 18), Duration.parse("PT1M25S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Larsen", LocalDate.of(2012, 4, 7), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 4, 3), Duration.parse("PT3M15S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 9, 18), Duration.parse("PT2M1S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Andersen", LocalDate.of(2012, 3, 19), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 12, 19), Duration.parse("PT3M6S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 8, 19), Duration.parse("PT1M13S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Pedersen", LocalDate.of(2013, 5, 27), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 4, 26), Duration.parse("PT2M43S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 12, 27), Duration.parse("PT2M44S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Hansen", LocalDate.of(2009, 7, 18), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 11, 23), Duration.parse("PT1M52S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 9, 24), Duration.parse("PT4M10S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Jensen", LocalDate.of(2013, 12, 5), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 3, 26), Duration.parse("PT3M52S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 8, 12), Duration.parse("PT4M57S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Thomsen", LocalDate.of(2015, 10, 18), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 9, 13), Duration.parse("PT1M59S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 2, 10), Duration.parse("PT1M43S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Olsen", LocalDate.of(2010, 1, 13), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 10, 8), Duration.parse("PT3M40S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 4, 10), Duration.parse("PT2M37S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Andersen", LocalDate.of(2012, 12, 15), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 4, 2), Duration.parse("PT3M37S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 7, 9), Duration.parse("PT2M43S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Pedersen", LocalDate.of(2010, 4, 7), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 2, 23), Duration.parse("PT1M47S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 10, 6), Duration.parse("PT2M25S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Christensen", LocalDate.of(2014, 12, 5), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 8, 23), Duration.parse("PT2M17S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 10, 7), Duration.parse("PT3M17S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Larsen", LocalDate.of(2011, 10, 17), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 17), Duration.parse("PT2M21S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 7, 16), Duration.parse("PT3M9S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Thomsen", LocalDate.of(2014, 10, 7), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 2, 10), Duration.parse("PT1M7S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 13), Duration.parse("PT1M21S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Nielsen", LocalDate.of(2015, 8, 10), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 14), Duration.parse("PT2M55S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 12, 18), Duration.parse("PT1M58S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Madsen", LocalDate.of(2015, 5, 25), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 10, 1), Duration.parse("PT3M58S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 8, 20), Duration.parse("PT2M4S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Andersen", LocalDate.of(2009, 11, 27), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 3, 1), Duration.parse("PT2M41S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 2, 6), Duration.parse("PT2M41S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Christensen", LocalDate.of(2010, 1, 15), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 6, 3), Duration.parse("PT2M47S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 2, 14), Duration.parse("PT3M58S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Andersen", LocalDate.of(2010, 8, 7), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 6, 3), Duration.parse("PT2M11S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 2, 20), Duration.parse("PT3M58S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Andersen", LocalDate.of(2011, 10, 18), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 2, 8), Duration.parse("PT1M22S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 5, 22), Duration.parse("PT1M37S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Jensen", LocalDate.of(2015, 1, 18), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 2, 5), Duration.parse("PT1M5S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 4, 2), Duration.parse("PT2M8S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Pedersen", LocalDate.of(2011, 1, 12), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 9, 27), Duration.parse("PT1M40S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 2, 24), Duration.parse("PT2M22S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Jensen", LocalDate.of(2014, 8, 7), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 1, 25), Duration.parse("PT4M10S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 4, 26), Duration.parse("PT3M16S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));


        //delfin.model.Training senior competition swimmers
    //gammel   swimmer_dummies_no_quotes
        //ny    swimmer_dummies_with_enumset

        listOfSwimmers.add(new CompSwimmer("Kirsten", "Jensen", LocalDate.of(1992, 12, 10), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 2, 14), Duration.parse("PT2M7S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 5, 10), Duration.parse("PT3M32S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Thomsen", LocalDate.of(2001, 12, 6), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 2, 5), Duration.parse("PT4M42S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 7, 16), Duration.parse("PT2M1S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Nielsen", LocalDate.of(1986, 9, 27), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 27), Duration.parse("PT4M35S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 11, 25), Duration.parse("PT3M36S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Pedersen", LocalDate.of(1987, 9, 3), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 14), Duration.parse("PT4M32S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 9, 7), Duration.parse("PT2M45S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Christensen", LocalDate.of(1985, 2, 5), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 3, 13), Duration.parse("PT4M25S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 7, 14), Duration.parse("PT1M33S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Thomsen", LocalDate.of(2004, 7, 7), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 23), Duration.parse("PT4M23S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 3, 5), Duration.parse("PT1M20S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Hansen", LocalDate.of(2002, 2, 12), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 5), Duration.parse("PT4M2S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 6, 7), Duration.parse("PT1M59S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Pedersen", LocalDate.of(2003, 8, 22), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 8), Duration.parse("PT2M41S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 6), Duration.parse("PT3M58S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Thomsen", LocalDate.of(1986, 5, 13), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 8, 20), Duration.parse("PT1M33S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 3, 21), Duration.parse("PT1M22S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Nielsen", LocalDate.of(1994, 11, 7), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 7, 22), Duration.parse("PT1M43S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 5, 3), Duration.parse("PT3M47S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Nielsen", LocalDate.of(1982, 11, 12), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 15), Duration.parse("PT2M17S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 6, 28), Duration.parse("PT3M10S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Nielsen", LocalDate.of(1982, 6, 1), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 5, 10), Duration.parse("PT4M54S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 9, 8), Duration.parse("PT1M36S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Olsen", LocalDate.of(1984, 6, 14), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 7, 5), Duration.parse("PT2M38S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 12, 28), Duration.parse("PT4M28S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Christensen", LocalDate.of(1982, 9, 28), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 3, 18), Duration.parse("PT3M57S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 3, 8), Duration.parse("PT2M48S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Hansen", LocalDate.of(1983, 5, 10), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 2), Duration.parse("PT2M58S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 1, 24), Duration.parse("PT1M59S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Pedersen", LocalDate.of(1988, 7, 21), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 10, 13), Duration.parse("PT2M6S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 4, 19), Duration.parse("PT1M19S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Pedersen", LocalDate.of(1989, 1, 14), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 5), Duration.parse("PT4M44S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 7, 10), Duration.parse("PT3M32S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Nielsen", LocalDate.of(1998, 2, 26), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 10), Duration.parse("PT2M19S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 7, 17), Duration.parse("PT1M48S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Jensen", LocalDate.of(1987, 3, 5), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 6, 27), Duration.parse("PT2M59S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 3, 27), Duration.parse("PT4M10S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Christensen", LocalDate.of(1993, 8, 5), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 4, 7), Duration.parse("PT3M23S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 12, 15), Duration.parse("PT3M29S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Hansen", LocalDate.of(2004, 2, 5), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 4, 22), Duration.parse("PT2M11S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 1, 16), Duration.parse("PT4M0S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Madsen", LocalDate.of(1995, 4, 10), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 2, 2), Duration.parse("PT2M18S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 3, 5), Duration.parse("PT4M31S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Larsen", LocalDate.of(1997, 3, 26), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 6, 3), Duration.parse("PT1M47S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 12), Duration.parse("PT1M33S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Madsen", LocalDate.of(1985, 11, 16), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 12, 13), Duration.parse("PT2M27S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 11), Duration.parse("PT4M30S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Pedersen", LocalDate.of(1985, 1, 11), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 8, 24), Duration.parse("PT2M21S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 14), Duration.parse("PT2M9S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Hansen", LocalDate.of(1997, 4, 7), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 5, 6), Duration.parse("PT4M42S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 4, 28), Duration.parse("PT2M34S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Jensen", LocalDate.of(1985, 8, 19), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 1, 9), Duration.parse("PT2M55S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 13), Duration.parse("PT2M18S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Andersen", LocalDate.of(1985, 9, 13), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 4, 26), Duration.parse("PT2M47S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 10, 1), Duration.parse("PT3M17S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Pedersen", LocalDate.of(1993, 12, 23), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 4, 17), Duration.parse("PT2M55S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 3, 28), Duration.parse("PT4M8S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Thomsen", LocalDate.of(1984, 9, 21), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 2, 13), Duration.parse("PT3M31S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 2, 5), Duration.parse("PT2M49S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Andersen", LocalDate.of(1982, 5, 10), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 2, 13), Duration.parse("PT3M6S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 3, 18), Duration.parse("PT1M48S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Hansen", LocalDate.of(1983, 9, 10), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 4, 15), Duration.parse("PT3M23S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 5, 14), Duration.parse("PT1M36S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Hansen", LocalDate.of(1980, 11, 22), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 11, 17), Duration.parse("PT1M52S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 1, 8), Duration.parse("PT2M19S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Hansen", LocalDate.of(1994, 9, 18), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 8, 7), Duration.parse("PT1M27S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 11, 6), Duration.parse("PT4M54S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Jensen", LocalDate.of(1989, 12, 10), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 2, 10), Duration.parse("PT4M14S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 10), Duration.parse("PT2M32S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Madsen", LocalDate.of(2003, 1, 25), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 9, 23), Duration.parse("PT4M38S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 4, 3), Duration.parse("PT1M7S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Andersen", LocalDate.of(1997, 6, 25), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 9, 9), Duration.parse("PT1M8S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 4, 9), Duration.parse("PT3M41S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Christensen", LocalDate.of(2002, 3, 7), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2023, 9, 4), Duration.parse("PT2M32S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 14), Duration.parse("PT4M23S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Nielsen", LocalDate.of(1986, 3, 16), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 23), Duration.parse("PT3M28S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 4, 11), Duration.parse("PT2M55S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Nielsen", LocalDate.of(1980, 10, 11), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 4, 10), Duration.parse("PT1M10S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 7, 4), Duration.parse("PT1M51S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Jensen", LocalDate.of(2002, 1, 26), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 2, 4), Duration.parse("PT4M39S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 7, 26), Duration.parse("PT1M42S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Thomsen", LocalDate.of(1988, 9, 24), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 5, 2), Duration.parse("PT4M37S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 27), Duration.parse("PT4M54S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Nielsen", LocalDate.of(1989, 4, 10), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 4, 3), Duration.parse("PT3M39S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 4, 23), Duration.parse("PT4M15S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Thomsen", LocalDate.of(1999, 2, 23), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 11, 11), Duration.parse("PT4M40S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 5, 26), Duration.parse("PT4M29S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Olsen", LocalDate.of(1997, 1, 11), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 19), Duration.parse("PT1M28S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 17), Duration.parse("PT2M13S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Madsen", LocalDate.of(1999, 7, 10), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 10, 24), Duration.parse("PT4M12S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 2, 19), Duration.parse("PT3M2S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Madsen", LocalDate.of(2001, 11, 7), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 11, 14), Duration.parse("PT1M52S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 9, 3), Duration.parse("PT4M43S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Nielsen", LocalDate.of(1992, 12, 19), true, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 1, 25), Duration.parse("PT3M24S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 11, 12), Duration.parse("PT1M27S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Olsen", LocalDate.of(2003, 9, 8), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 4, 18), Duration.parse("PT2M41S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 1, 16), Duration.parse("PT3M30S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Pedersen", LocalDate.of(1998, 5, 2), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 1, 16), Duration.parse("PT3M53S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 1, 26), Duration.parse("PT2M26S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Christensen", LocalDate.of(1996, 11, 10), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 10), Duration.parse("PT4M5S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2025, 1, 3), Duration.parse("PT4M57S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Thomsen", LocalDate.of(1981, 2, 13), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 2, 13), Duration.parse("PT3M38S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2023, 3, 13), Duration.parse("PT3M2S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Thomsen", LocalDate.of(1981, 6, 11), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2025, 4, 11), Duration.parse("PT4M41S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 3, 13), Duration.parse("PT1M41S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Pedersen", LocalDate.of(1999, 9, 24), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2025, 5, 26), Duration.parse("PT3M46S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 3, 13), Duration.parse("PT3M22S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Olsen", LocalDate.of(2001, 11, 5), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 12, 23), Duration.parse("PT4M14S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2023, 5, 11), Duration.parse("PT3M5S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Thomsen", LocalDate.of(2002, 3, 8), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 12, 19), Duration.parse("PT4M50S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2025, 2, 11), Duration.parse("PT4M7S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Andersen", LocalDate.of(1993, 11, 5), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2023, 4, 1), Duration.parse("PT4M30S")), new Training(SwimmingDiscipline.BREASTSTROKE, LocalDate.of(2024, 7, 13), Duration.parse("PT2M17S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Christensen", LocalDate.of(1985, 3, 22), false, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 2, 14), Duration.parse("PT3M27S")), new Training(SwimmingDiscipline.BACKSTROKE, LocalDate.of(2024, 8, 21), Duration.parse("PT3M38S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Madsen", LocalDate.of(1981, 9, 12), false, false, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 1, 8), Duration.parse("PT3M55S")), new Training(SwimmingDiscipline.BUTTERFLY, LocalDate.of(2024, 6, 22), Duration.parse("PT2M18S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Nielsen", LocalDate.of(1985, 8, 12), true, true, new ArrayList<Training>(Arrays.asList(new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 6, 12), Duration.parse("PT3M38S")), new Training(SwimmingDiscipline.FREESTYLE, LocalDate.of(2024, 2, 5), Duration.parse("PT4M49S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));

//        //delfin.model.Competition junior competition swimmers
//       competition_swimmers_after_2008

        listOfSwimmers.add(new CompSwimmer("Kirsten", "Jensen", LocalDate.of(2011, 5, 4), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M21S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M13S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Hansen", LocalDate.of(2015, 11, 24), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M49S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M25S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Hansen", LocalDate.of(2014, 8, 17), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M4S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M32S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Jensen", LocalDate.of(2015, 4, 17), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M1S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M51S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Jensen", LocalDate.of(2009, 7, 17), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M11S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M55S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Nielsen", LocalDate.of(2015, 8, 20), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M46S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M35S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Olsen", LocalDate.of(2012, 6, 18), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M38S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M36S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Olsen", LocalDate.of(2015, 6, 4), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M1S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M35S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Andersen", LocalDate.of(2015, 5, 24), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M10S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M31S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Andersen", LocalDate.of(2015, 9, 18), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M11S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M13S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Pedersen", LocalDate.of(2011, 9, 19), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M31S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M19S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Andersen", LocalDate.of(2012, 7, 12), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M31S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M41S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Pedersen", LocalDate.of(2015, 11, 14), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M48S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M52S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Christensen", LocalDate.of(2015, 5, 19), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M44S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M54S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Jensen", LocalDate.of(2015, 1, 25), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M57S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M53S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Nielsen", LocalDate.of(2014, 11, 8), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M0S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M6S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Nielsen", LocalDate.of(2010, 12, 8), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M3S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M2S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Thomsen", LocalDate.of(2010, 8, 17), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M23S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M27S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Nielsen", LocalDate.of(2011, 4, 20), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M19S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M40S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Madsen", LocalDate.of(2009, 5, 19), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M6S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M26S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Pedersen", LocalDate.of(2009, 11, 7), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M53S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M29S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Larsen", LocalDate.of(2009, 4, 13), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M17S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M17S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Pedersen", LocalDate.of(2015, 10, 7), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M51S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M56S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Madsen", LocalDate.of(2012, 7, 7), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M29S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M40S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Larsen", LocalDate.of(2011, 4, 4), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M5S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M23S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Madsen", LocalDate.of(2010, 6, 2), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M57S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M16S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Hansen", LocalDate.of(2012, 3, 15), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M8S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M26S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Christensen", LocalDate.of(2015, 1, 16), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M46S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M29S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Pedersen", LocalDate.of(2014, 6, 23), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M0S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M34S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Larsen", LocalDate.of(2014, 5, 23), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M22S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M35S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Christensen", LocalDate.of(2009, 5, 1), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M50S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M2S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Hansen", LocalDate.of(2009, 11, 14), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M15S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M42S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Thomsen", LocalDate.of(2009, 9, 3), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M9S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M59S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Hansen", LocalDate.of(2015, 8, 3), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M26S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M13S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Nielsen", LocalDate.of(2014, 11, 25), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M24S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M51S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Nielsen", LocalDate.of(2010, 12, 24), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M57S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M45S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Olsen", LocalDate.of(2013, 10, 15), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M11S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M52S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Larsen", LocalDate.of(2009, 9, 14), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M52S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M6S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Olsen", LocalDate.of(2014, 10, 21), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M1S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M3S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Christensen", LocalDate.of(2013, 6, 15), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M58S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M41S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Olsen", LocalDate.of(2009, 12, 26), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M22S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M34S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Hansen", LocalDate.of(2015, 11, 17), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M5S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M11S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Larsen", LocalDate.of(2011, 9, 6), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M56S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M17S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Christensen", LocalDate.of(2014, 9, 27), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M31S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M11S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Christensen", LocalDate.of(2009, 7, 13), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M44S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M54S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Pedersen", LocalDate.of(2015, 1, 8), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M15S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M52S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Olsen", LocalDate.of(2009, 3, 12), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M12S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M31S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Pedersen", LocalDate.of(2011, 7, 2), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M52S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M37S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Hansen", LocalDate.of(2013, 11, 19), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M47S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M29S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Olsen", LocalDate.of(2015, 3, 24), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M36S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M12S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Christensen", LocalDate.of(2012, 2, 7), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M12S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M15S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Thomsen", LocalDate.of(2011, 10, 1), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M36S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M12S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Olsen", LocalDate.of(2015, 3, 8), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M21S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M45S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Madsen", LocalDate.of(2009, 7, 10), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M10S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M40S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Olsen", LocalDate.of(2015, 12, 14), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M45S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M10S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Thomsen", LocalDate.of(2015, 6, 19), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M22S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M28S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Thomsen", LocalDate.of(2015, 3, 15), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M21S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M59S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Larsen", LocalDate.of(2014, 8, 10), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M24S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M35S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Madsen", LocalDate.of(2014, 6, 6), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M14S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M11S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Jensen", LocalDate.of(2009, 9, 12), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M26S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M58S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));


        //delfin.model.Competition senior competition swimmers
// gammel      competition_swimmers
        // ny    competition_swimmers_with_enumset
        listOfSwimmers.add(new CompSwimmer("Jens", "Thomsen", LocalDate.of(1982, 3, 8), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M31S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M47S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Christensen", LocalDate.of(1987, 9, 23), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M41S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M34S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Nielsen", LocalDate.of(1993, 8, 28), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M26S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M21S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Larsen", LocalDate.of(1996, 6, 5), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M47S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M13S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Hansen", LocalDate.of(1999, 9, 23), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M45S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M52S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Olsen", LocalDate.of(1993, 3, 11), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M23S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M30S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Andersen", LocalDate.of(1983, 7, 20), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M36S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M44S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Jensen", LocalDate.of(1991, 10, 2), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M59S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M16S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Jensen", LocalDate.of(1991, 6, 4), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M38S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M44S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Madsen", LocalDate.of(1981, 2, 6), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M46S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M59S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Larsen", LocalDate.of(1999, 9, 18), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M47S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M42S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Olsen", LocalDate.of(1994, 10, 8), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M26S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M32S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Hansen", LocalDate.of(1986, 4, 2), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M17S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M8S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Andersen", LocalDate.of(1991, 4, 26), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M59S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M12S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Olsen", LocalDate.of(1989, 7, 19), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M49S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M22S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Nielsen", LocalDate.of(1987, 1, 12), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M37S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M54S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Anders", "Madsen", LocalDate.of(1983, 9, 1), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M32S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M57S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Pedersen", LocalDate.of(1991, 12, 1), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M37S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M12S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Christensen", LocalDate.of(2001, 1, 6), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M55S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M53S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Nielsen", LocalDate.of(1999, 5, 28), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M53S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M3S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Lars", "Thomsen", LocalDate.of(1988, 5, 18), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M14S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M16S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Pedersen", LocalDate.of(2000, 9, 23), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M59S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M27S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Olsen", LocalDate.of(1993, 1, 8), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M25S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M31S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Andersen", LocalDate.of(1995, 7, 25), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M6S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M42S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Hansen", LocalDate.of(1999, 7, 3), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M41S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M19S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Nielsen", LocalDate.of(2003, 5, 25), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M13S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M17S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Christensen", LocalDate.of(2002, 3, 6), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M43S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M20S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Larsen", LocalDate.of(1990, 2, 22), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M13S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M18S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Larsen", LocalDate.of(1995, 6, 6), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M27S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M29S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Larsen", LocalDate.of(1986, 9, 9), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M11S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M56S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Hansen", LocalDate.of(1985, 11, 22), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M2S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M5S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Madsen", LocalDate.of(1987, 5, 9), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M7S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M24S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Nielsen", LocalDate.of(1982, 3, 5), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M59S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M16S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Thomsen", LocalDate.of(1987, 11, 7), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M7S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M51S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Jensen", LocalDate.of(1985, 12, 9), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M29S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M2S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jesper", "Pedersen", LocalDate.of(2002, 4, 9), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M55S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M11S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Jens", "Madsen", LocalDate.of(1999, 4, 26), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M6S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT4M56S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Olsen", LocalDate.of(1983, 8, 24), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT2M50S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M3S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Lone", "Hansen", LocalDate.of(1982, 9, 27), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M27S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M23S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Karen", "Hansen", LocalDate.of(1997, 10, 27), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 8, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M55S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M23S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Erik", "Thomsen", LocalDate.of(1992, 9, 2), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M29S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M25S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Jensen", LocalDate.of(1997, 2, 6), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M54S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M20S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Bo", "Christensen", LocalDate.of(1982, 5, 1), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M41S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M2S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Pedersen", LocalDate.of(1990, 3, 26), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M4S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT1M52S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Pedersen", LocalDate.of(1992, 6, 12), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M8S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M50S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Thomas", "Olsen", LocalDate.of(2000, 10, 22), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 2, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M19S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT2M9S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Andersen", LocalDate.of(1999, 7, 19), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M23S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M35S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Camilla", "Pedersen", LocalDate.of(1997, 12, 15), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M40S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M47S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Nielsen", LocalDate.of(1991, 6, 21), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M58S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M11S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Maria", "Hansen", LocalDate.of(1984, 3, 7), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M25S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 8, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M26S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Pernille", "Christensen", LocalDate.of(1984, 11, 1), true, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT1M55S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M40S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Rasmus", "Hansen", LocalDate.of(1987, 1, 10), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.FREESTYLE, Duration.parse("PT2M40S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT2M36S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BACKSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Niels", "Larsen", LocalDate.of(1993, 3, 24), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M56S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M3S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Anne", "Larsen", LocalDate.of(1993, 5, 6), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M20S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M18S")))), EnumSet.of(SwimmingDiscipline.BUTTERFLY, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Madsen", LocalDate.of(1983, 9, 22), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 5, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT4M57S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.FREESTYLE, Duration.parse("PT3M45S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Mette", "Madsen", LocalDate.of(1989, 10, 10), true, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 3, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M30S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 4, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M7S")))), EnumSet.of(SwimmingDiscipline.BACKSTROKE, SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.FREESTYLE, SwimmingDiscipline.BUTTERFLY)));
        listOfSwimmers.add(new CompSwimmer("Ida", "Larsen", LocalDate.of(1996, 11, 5), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 1, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT3M3S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 7, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT1M16S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Sofie", "Nielsen", LocalDate.of(2001, 5, 21), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 4, SwimmingDiscipline.BACKSTROKE, Duration.parse("PT3M47S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M35S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE)));
        listOfSwimmers.add(new CompSwimmer("Kirsten", "Madsen", LocalDate.of(1995, 12, 11), false, false, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 7, SwimmingDiscipline.BUTTERFLY, Duration.parse("PT3M5S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 2, SwimmingDiscipline.FREESTYLE, Duration.parse("PT1M54S")))), EnumSet.of(SwimmingDiscipline.FREESTYLE)));
        listOfSwimmers.add(new CompSwimmer("Hans", "Thomsen", LocalDate.of(1989, 10, 19), false, true, new ArrayList<Competition>(Arrays.asList(new Competition("Bornholm sommerlejr", LocalDate.of(2024, 7, 14), 6, SwimmingDiscipline.FREESTYLE, Duration.parse("PT4M14S")), new Competition("Vintertræf", LocalDate.of(2025, 2, 19), 6, SwimmingDiscipline.BREASTSTROKE, Duration.parse("PT4M44S")))), EnumSet.of(SwimmingDiscipline.BREASTSTROKE, SwimmingDiscipline.BUTTERFLY)));

    }





    public List<Swimmer> getSwimmersAtOrAboveAge(int age) {
        List<Swimmer> swimmersAtOrAboveAgeList = new ArrayList<>();

        for (Swimmer swimmer : listOfSwimmers) {
            if (swimmer.calculateAge() >= age) {
                swimmersAtOrAboveAgeList.add(swimmer);
            }
        }

        return swimmersAtOrAboveAgeList;
    }

}